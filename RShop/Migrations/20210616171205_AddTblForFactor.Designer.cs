// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RShop.Data;

namespace RShop.Migrations
{
    [DbContext(typeof(RShopContext_DB))]
    [Migration("20210616171205_AddTblForFactor")]
    partial class AddTblForFactor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RShop.Models.Category", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "انواع لباس برای ورزش",
                            Name = "لباس ورزشی"
                        },
                        new
                        {
                            ID = 2,
                            Description = "لباس های مردانه با قیمت عالی",
                            Name = "لباس های مزدانه"
                        },
                        new
                        {
                            ID = 3,
                            Description = " تیشرت های بزرگ برای همه سنین ",
                            Name = "لباس های بزرگ"
                        });
                });

            modelBuilder.Entity("RShop.Models.CategorytpProduct", b =>
                {
                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("CategoryID", "ProductID");

                    b.HasIndex("ProductID");

                    b.ToTable("CategorytpProducts");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            ProductID = 1
                        },
                        new
                        {
                            CategoryID = 2,
                            ProductID = 1
                        },
                        new
                        {
                            CategoryID = 3,
                            ProductID = 1
                        },
                        new
                        {
                            CategoryID = 1,
                            ProductID = 2
                        },
                        new
                        {
                            CategoryID = 2,
                            ProductID = 2
                        },
                        new
                        {
                            CategoryID = 3,
                            ProductID = 2
                        },
                        new
                        {
                            CategoryID = 1,
                            ProductID = 3
                        },
                        new
                        {
                            CategoryID = 2,
                            ProductID = 3
                        },
                        new
                        {
                            CategoryID = 3,
                            ProductID = 3
                        });
                });

            modelBuilder.Entity("RShop.Models.Order", b =>
                {
                    b.Property<int>("OrderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsFinaly")
                        .HasColumnType("bit");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersUserID")
                        .HasColumnType("int");

                    b.HasKey("OrderID");

                    b.HasIndex("UsersUserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("RShop.Models.OrderDetails", b =>
                {
                    b.Property<int>("DetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("OrderID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("DetailID");

                    b.HasIndex("OrderID");

                    b.HasIndex("ProductID");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("RShop.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "انواع شلوار لی با سایز های بزرگ و کوچک",
                            Name = "شلوار لی مردانه",
                            Price = 45000m,
                            Quantity = 43
                        },
                        new
                        {
                            ID = 2,
                            Description = "لباس های ورزشی مخصوص انواع رشته ها",
                            Name = "لباس  ورزشی",
                            Price = 45000m,
                            Quantity = 43
                        },
                        new
                        {
                            ID = 3,
                            Description = "انواع تیشرت با سایز های بزرگ  و کوچک",
                            Name = "تیشرت مردانه",
                            Price = 45000m,
                            Quantity = 43
                        });
                });

            modelBuilder.Entity("RShop.Models.Users", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("datetime2");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RShop.Models.CategorytpProduct", b =>
                {
                    b.HasOne("RShop.Models.Category", "Category")
                        .WithMany("CategoryToProducts")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RShop.Models.Product", "Product")
                        .WithMany("CategorytoProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RShop.Models.Order", b =>
                {
                    b.HasOne("RShop.Models.Users", "Users")
                        .WithMany("Orders")
                        .HasForeignKey("UsersUserID");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("RShop.Models.OrderDetails", b =>
                {
                    b.HasOne("RShop.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RShop.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RShop.Models.Category", b =>
                {
                    b.Navigation("CategoryToProducts");
                });

            modelBuilder.Entity("RShop.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("RShop.Models.Product", b =>
                {
                    b.Navigation("CategorytoProducts");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("RShop.Models.Users", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
